class VulnerabilidadeMapper:
    def map_from_veracode_issue(self, issue_data):
        vuln_data = issue_data.get("vulnerability", {})
        exploit_data = vuln_data.get("exploitability", {})

        return {
            "cve": vuln_data.get("cve", "sem-cve"),
            "severidade": self._classifica_severidade(vuln_data.get("cvss3_score", 0)),
            "status": issue_data.get("issue_status", "aberta"),
            "descricao": vuln_data.get("title", ""),
            "observado_em_exploit": exploit_data.get("exploit_observed", False),
            "epss_score": exploit_data.get("epss_score", 0)
        }

    def _classifica_severidade(self, score):
        if score >= 9.0:
            return "critica"
        elif score >= 7.0:
            return "alta"
        elif score >= 4.0:
            return "media"
        else:
            return "baixa"